{"version":3,"sources":["searchService.js","components/Searchbar.js","components/ImageGalleryItem.js","components/ImagesGallery.js","components/Button.js","components/Modal.js","searchBigImg.js","App.js","index.js"],"names":["FetchPhotos","searchQuery","searchPage","url","axios","get","then","data","hits","catch","err","console","log","Searchbar","state","query","page","handleSearch","e","a","preventDefault","props","annulePage","arrData","addImages","handleChange","setState","target","value","this","isLoading","newData","loadMore","className","onSubmit","type","name","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","map","hit","index","id","src","webformatURL","alt","ImagesList","Button","incrementPage","pageCount","onClick","Modal","closeModal","closeModalOverlay","imgUrl","searchBigImg","largeImageURL","App","modalIsOpen","bigImgUrl","moreData","prev","window","scrollTo","top","document","documentElement","scrollHeight","behavior","initialPage","pageNumber","openModal","keyCode","foundData","addEventListener","querySelector","width","color","style","position","left","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.ea6a01c3.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport function FetchPhotos(searchQuery, searchPage) {\r\n    const baseUrl = 'https://pixabay.com/api/';\r\n    const api_key = '23036221-d804a8a78d7b0866edf7d8fc3';\r\n    let url = `${baseUrl}?key=${api_key}&q=${searchQuery}&page=${searchPage}&image_type=photo&orientation=horizontal&per_page=12`\r\n\r\n       return axios\r\n            .get(url)\r\n            .then((data) => {\r\n                return data\r\n            })\r\n            .then((data) => {\r\n                return data.data.hits\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n}","import { Component } from 'react';\r\nimport { FetchPhotos } from '../searchService';\r\n\r\nexport class Searchbar extends Component {\r\n    state = {\r\n        query: '',\r\n        page: 1,\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        if (this.state.page != this.props.page) {\r\n           await this.setState({ page: this.props.page, })\r\n            let isLoading = true;\r\n            this.props.isLoading(isLoading)\r\n            let newData;\r\n            await FetchPhotos(this.state.query, this.state.page).then((data) => { newData = data })\r\n            isLoading = false;\r\n            this.props.isLoading(isLoading)\r\n            this.props.loadMore(newData)\r\n        }\r\n    }\r\n\r\n    handleSearch = async(e) => {\r\n        e.preventDefault()\r\n\r\n        let initialPage = 1;\r\n        await this.props.annulePage(initialPage)\r\n\r\n        let arrData;\r\n        await FetchPhotos(this.state.query, this.state.page).then((data) => { arrData = data })\r\n        this.props.addImages(arrData)\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            query: e.target.value,\r\n           \r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n            <form className=\"SearchForm\" onSubmit={this.handleSearch}>\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n\r\n                <input\r\n                className=\"SearchForm-input\"\r\n                name=\"searchQuery\"\r\n                type=\"text\"\r\n                autoComplete=\"off\"\r\n                autoFocus\r\n                        placeholder=\"Search images and photos\"\r\n                        onChange={this.handleChange}\r\n                />\r\n            </form>\r\n            </header> \r\n        )\r\n    }\r\n}","export default function ImageGalleryItem({ hits }) {\r\n    const renderedData = hits.data.map((hit, index) => {\r\n        return (\r\n            <li key={index} className=\"ImageGalleryItem\">\r\n                <img\r\n                    id={hit.id}\r\n                    src={hit.webformatURL}\r\n                    alt=\"image found\"\r\n                    className=\"ImageGalleryItem-image\"\r\n                />\r\n            </li>\r\n        )\r\n    })\r\n    return renderedData\r\n}","import ImageGalleryItem from \"./ImageGalleryItem\"\r\n\r\nexport default function ImagesList(data) {  \r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            <ImageGalleryItem hits={data}/>\r\n        </ul>\r\n    )\r\n}","import { Component } from 'react'\r\n\r\nexport class Button extends Component {\r\n    state = {\r\n        page: 1,\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        if (this.state.page !== this.props.page) {\r\n            this.setState({page: this.props.page,})\r\n        }\r\n    }\r\n\r\n    incrementPage = async() => {\r\n        await this.setState({ page: this.state.page + 1, })\r\n        this.props.pageCount(this.state.page)\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <button\r\n                type=\"button\"\r\n                className=\"Button\"\r\n                onClick={this.incrementPage}\r\n            >Load More\r\n            </button>\r\n        )\r\n    }\r\n}","import {Component} from 'react'\r\n\r\nexport class Modal extends Component {\r\n    closeModal = () => {\r\n        let modalIsOpen = false;\r\n        this.props.closeModalOverlay(modalIsOpen);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Overlay\" onClick={this.closeModal}>\r\n                <div className=\"Modal\">\r\n                    <img src={this.props.imgUrl} alt=\"Big image\" />\r\n                </div>\r\n            </div>\r\n        )  \r\n    }\r\n}","import axios from 'axios'\r\n\r\nexport function searchBigImg(id) {\r\n    const baseUrl = 'https://pixabay.com/api/';\r\n    const api_key = '23036221-d804a8a78d7b0866edf7d8fc3';\r\n    let url = `${baseUrl}?key=${api_key}&id=${id}`\r\n\r\n    return axios\r\n        .get(url)\r\n        .then((data) => {\r\n            return data\r\n        })\r\n        .then((data) => {\r\n            return data.data.hits[0].largeImageURL\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n}","//* CSS *//\nimport './App.scss';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\n//* Everything else *//\nimport { Component } from 'react';\nimport Loader from \"react-loader-spinner\";\n\nimport { Searchbar } from './components/Searchbar'\nimport ImagesGallery from './components/ImagesGallery'\nimport {Button} from './components/Button'\n\nimport { FetchPhotos } from './searchService';\nimport { Modal } from './components/Modal';\nimport {searchBigImg} from './searchBigImg'\n\nclass App extends Component {\n  state = {\n    data: [],\n    page: 1,\n    query: '',\n    isLoading: false,\n    modalIsOpen: false,\n    bigImgUrl: '',\n  }\n\n  async componentDidMount() {\n    this.setState({isLoading: true,})\n    let foundData;\n    await FetchPhotos(this.state.query, this.state.page).then((data) => {foundData = data})\n    this.setState({\n      data: foundData,\n      isLoading: false,\n    })\n    document.addEventListener(\"keydown\", this.closeModal)\n    document.querySelector(\".ImageGallery\").addEventListener(\"click\", this.openModal)\n  }\n\n  addImages = (arrData) => {\n    this.setState(() => {\n      return {\n        data: arrData,\n      }\n    })\n  }\n\n  loadMore = async (moreData) => {\n        this.setState((prev) => {\n        return {\n          data: [...prev.data, ...moreData],\n        }\n      })\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  annulePage = async(initialPage) => {\n    await this.setState({page: initialPage,})\n  }\n\n  pageCount = (pageNumber) => {\n    this.setState(() => {\n      return {\n        page: pageNumber,\n      }\n    })\n  }\n\n  isLoading = (isLoading) => {\n    this.setState({isLoading: isLoading,})\n  }\n\n  openModal = async(e) => {\n    await this.setState({\n      modalIsOpen: true,\n    })\n    await searchBigImg(e.target.id).then((bigImgUrl) => { this.setState({bigImgUrl: bigImgUrl,}) })\n  }\n\n  closeModal = (e) => {\n    if (this.state.modalIsOpen === false) {\n      return\n    }\n   if(e.keyCode === 27) {\n     this.setState({\n       modalIsOpen: false,\n       bigImgUrl: '',\n     })\n    }\n  }\n\n  closeModalOverlay = (modalIsOpen) => {\n    this.setState({\n      modalIsOpen: modalIsOpen,\n      bigImgUrl: '',\n    })\n  }\n\n  render() {\n    const style = {\n      position: \"fixed\",\n      top: \"50%\",\n      left: \"35%\",\n    }\n      return (\n        <>\n          {this.state.modalIsOpen ? <Modal imgUrl={this.state.bigImgUrl} closeModalOverlay={this.closeModalOverlay}/> : null}\n        <Searchbar addImages={this.addImages} loadMore={this.loadMore} page={this.state.page} annulePage={this.annulePage} isLoading={this.isLoading}/>\n        {this.state.isLoading ? <Loader className=\"loader\" type=\"ThreeDots\" width=\"500px\" color=\"#00BFFF\" style={style} /> : null}\n        <ImagesGallery data={this.state.data}/>\n        <Button pageCount={this.pageCount} page={ this.state.page }/>\n      </>\n    )\n  }\n  \n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}